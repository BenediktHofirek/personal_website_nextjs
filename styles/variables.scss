@use "sass:math";

//colors
$blueHeavy: #0f2a66;
$blueMedium: #113d9c;

$shadowPrimary: rgb(63, 114, 127);

$greyPrimary: rgb(150,150,150);
$greySecondary: rgb(180,180,180);

$errorColor: rgb(255, 123, 0);

//others
$borderRadiusPrimary: 3px;
$sectionWidth: 85vw;
$refSectionWidth: 1080px;
$animationDurationPrimary: 1.5s;
$hamburgerBreakpoint: 600px;

@mixin boxShadowPrimaryL {
  box-shadow: rl(22.5px) rl(22.5px) rl(11.25px) $shadowPrimary;
}

@mixin boxShadowPrimaryP {
  box-shadow: rp(22.5px) rp(22.5px) rp(11.25px) $shadowPrimary;
}

@mixin alignRight() {
  right: 2.5vw;

  @media only screen and (min-width: 1921px) {
    right: calc(50vw - (min(42.5vw, 75vh) * 1.125));
  }
}

//mixin & functions
@mixin threedshadow($color, $depth) {
  $all: ();
  @for $i from 1 through $depth {
    $all: append($all, append($i*1px $i*1px 0, $color), comma);
  }
  text-shadow: $all;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@function rWidth($size, $max-width) {
  @return calc((100vw / #{strip-unit($max-width)}) * #{strip-unit($size)});
}

@function rHeight($size, $max-height) {
  @return calc((100vh / #{strip-unit($max-height)}) * #{strip-unit($size)});
}

@function responsiveSize($size, $refHeight, $refWidth) {
  @return min(#{rHeight($size, $refHeight)}, #{rWidth($size, $refWidth)});
}

//responsive section landscape
@function rl($size) {
  @return responsiveSize($size, 1009px, $refSectionWidth);
}

//responsive section portrait
@function rp($size) {
  @return responsiveSize($size, 1440px, $refSectionWidth);
}